---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      version: 75.10.0
  interval: 1h
  valuesFrom:
    - kind: ConfigMap
      name: kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  values:
    fullnameOverride: prometheus # changed
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8sContainerCpuUsageSecondsTotal: true
        k8sContainerMemoryCache: true
        k8sContainerMemoryRss: true
        k8sContainerMemorySwap: true
        k8sContainerResource: true
        k8sContainerMemoryWorkingSetBytes: true
        k8sPodOwner: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeSchedulerAlerting: true
        kubeSchedulerRecording: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
        windows: true
    alertmanager:
      enabled: true
      ingress:
        enabled: false
      alertmanagerSpec: # changed
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: truenas-nfs
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 1Gi
    grafana:
      enabled: true
      forceDeployDatasources: false
      forceDeployDashboards: false
      defaultDashboardsEnabled: true
      defaultDashboardsTimezone: "America/Toronto" # changed
      persistence: # changed
        enabled: true
        type: pvc
        storageClassName: truenas-nfs
        accessModes: ["ReadWriteOnce"]
        size: 20Gi
    kubeEtcd:
      enabled: true
      endpoints: # changed
        - 10.0.20.111
    kubelet:
      enabled: true
      serviceMonitor: # changed
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeScheduler:
      enabled: true
      endpoints: # changed
        - 10.0.20.111
    kube-state-metrics:
      prometheus:
        monitor:
          enabled: true
          relabelings: # changed
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    prometheus:
      enabled: true
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica" # changed
        ruleSelectorNilUsesHelmValues: false # changed
        serviceMonitorSelectorNilUsesHelmValues: false # changed
        podMonitorSelectorNilUsesHelmValues: false # changed
        probeSelectorNilUsesHelmValues: false # changed
        retention: 7d # changed
        enableAdminAPI: true # changed
        storageSpec: # changed
          volumeClaimTemplate:
            spec:
              storageClassName: truenas-nfs
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
    prometheusOperator:
      enabled: true
      prometheusConfigReloader: # changed
        resources:
          requests:
            cpu: 200m
            memory: 50Mi
          limits:
            memory: 100Mi
    prometheus-node-exporter:
      podLabels:
        jobLabel: node-exporter
      service:
        portName: http-metrics
      prometheus:
        monitor:
          enabled: true
          relabelings: # changed
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
